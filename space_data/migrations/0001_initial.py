# Generated by Django 5.1.2 on 2024-10-27 20:21

import django.core.validators
import django.db.models.deletion
import space_data.models
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Manufacturer",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("name", models.CharField(max_length=255)),
            ],
            options={
                "db_table": "manufacturers",
            },
        ),
        migrations.CreateModel(
            name="RocketFamily",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("family_name", models.CharField(max_length=255, unique=True)),
                ("description", models.TextField(blank=True, null=True)),
                ("wiki_url", models.TextField(blank=True, null=True)),
            ],
            options={
                "db_table": "rocket_families",
            },
        ),
        migrations.CreateModel(
            name="Vehicle",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("name", models.CharField(max_length=255, unique=True)),
                (
                    "vehicle_type",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
            ],
            options={
                "db_table": "vehicles",
            },
        ),
        migrations.CreateModel(
            name="VehicleRecoveryMethod",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("type", models.CharField(max_length=50)),
                ("short_name", models.CharField(blank=True, max_length=50, null=True)),
                (
                    "full_name",
                    models.CharField(
                        blank=True, max_length=255, null=True, unique=True
                    ),
                ),
                ("location", models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                "db_table": "vehicle_recovery_methods",
            },
        ),
        migrations.CreateModel(
            name="Image",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("url", models.TextField()),
                ("object_id", models.PositiveIntegerField()),
                (
                    "object_type",
                    models.CharField(
                        choices=[
                            ("space_companies", "Space Companies"),
                            ("vehicles", "Vehicles"),
                            ("launches_missions", "Launches Missions"),
                            ("payload_groups", "Payload Groups"),
                            ("vehicle_recovery_methods", "Vehicle Recovery Methods"),
                            ("rocket_configurations", "Rocket Configurations"),
                            ("launch_pads", "Launch Pads"),
                            ("rocket_families", "Rocket Families"),
                        ],
                        max_length=50,
                    ),
                ),
            ],
            options={
                "db_table": "images",
                "indexes": [
                    models.Index(fields=["object_id"], name="idx_img_obj_id"),
                    models.Index(fields=["object_type"], name="idx_img_obj_type"),
                ],
            },
        ),
        migrations.CreateModel(
            name="LaunchPad",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("full_name", models.CharField(max_length=255, unique=True)),
                ("description", models.TextField(blank=True, null=True)),
                (
                    "latitude",
                    models.DecimalField(
                        blank=True,
                        decimal_places=6,
                        max_digits=9,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(-90),
                            django.core.validators.MaxValueValidator(90),
                        ],
                    ),
                ),
                (
                    "longitude",
                    models.DecimalField(
                        blank=True,
                        decimal_places=6,
                        max_digits=9,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(-180),
                            django.core.validators.MaxValueValidator(180),
                        ],
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Active", "Active"),
                            ("Under Construction", "Under Construction"),
                            ("Abandoned", "Abandoned"),
                        ],
                        max_length=50,
                        null=True,
                    ),
                ),
            ],
            options={
                "db_table": "launch_pads",
                "indexes": [models.Index(fields=["status"], name="idx_lp_status")],
            },
        ),
        migrations.CreateModel(
            name="RocketConfiguration",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("modification_name", models.CharField(max_length=255)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("Active", "Active"),
                            ("Retired", "Retired"),
                            ("Planned", "Planned"),
                        ],
                        max_length=50,
                    ),
                ),
                (
                    "price",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=20,
                        null=True,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                ("reusable", models.BooleanField(blank=True, null=True)),
                (
                    "launch_thrust",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=20,
                        null=True,
                        validators=[django.core.validators.MinValueValidator(0.0001)],
                    ),
                ),
                (
                    "payload_mass_leo",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=20,
                        null=True,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                (
                    "payload_mass_gto",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=20,
                        null=True,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                (
                    "stages",
                    models.IntegerField(
                        blank=True,
                        null=True,
                        validators=[django.core.validators.MinValueValidator(1)],
                    ),
                ),
                (
                    "side_boosters",
                    models.IntegerField(
                        blank=True,
                        null=True,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                (
                    "rocket_height",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=20,
                        null=True,
                        validators=[django.core.validators.MinValueValidator(0.0001)],
                    ),
                ),
                (
                    "rocket_diameter",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=20,
                        null=True,
                        validators=[django.core.validators.MinValueValidator(0.0001)],
                    ),
                ),
                (
                    "fairing_diameter",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=20,
                        null=True,
                        validators=[django.core.validators.MinValueValidator(0.0001)],
                    ),
                ),
                (
                    "fairing_height",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=20,
                        null=True,
                        validators=[django.core.validators.MinValueValidator(0.0001)],
                    ),
                ),
                ("wiki_url", models.TextField(blank=True, null=True)),
                (
                    "manufacturer",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="rocket_configurations",
                        to="space_data.manufacturer",
                    ),
                ),
                (
                    "vehicle_family",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="configurations",
                        to="space_data.rocketfamily",
                    ),
                ),
            ],
            options={
                "db_table": "rocket_configurations",
            },
        ),
        migrations.CreateModel(
            name="LaunchMission",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "year",
                    models.IntegerField(
                        blank=True,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(1900),
                            django.core.validators.MaxValueValidator(2100),
                        ],
                    ),
                ),
                (
                    "month",
                    models.IntegerField(
                        blank=True,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(12),
                        ],
                    ),
                ),
                ("day", models.IntegerField(blank=True, null=True)),
                (
                    "hour",
                    models.IntegerField(
                        blank=True,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(23),
                        ],
                    ),
                ),
                (
                    "minute",
                    models.IntegerField(
                        blank=True,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(59),
                        ],
                    ),
                ),
                (
                    "flight_status",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Success", "Success"),
                            ("Partial Failure", "Partial Failure"),
                            ("Failure", "Failure"),
                        ],
                        max_length=50,
                        null=True,
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("description", models.TextField(blank=True, null=True)),
                ("video_url", models.TextField(blank=True, null=True)),
                (
                    "launch_pad",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="launch_missions",
                        to="space_data.launchpad",
                    ),
                ),
                (
                    "rocket_config",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="launch_missions",
                        to="space_data.rocketconfiguration",
                    ),
                ),
            ],
            options={
                "db_table": "launches_missions",
            },
        ),
        migrations.CreateModel(
            name="SpaceCompany",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("short_name", models.CharField(max_length=255, unique=True)),
                ("full_name", models.CharField(max_length=255)),
                (
                    "type_of_organization",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("country", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "head_title_and_name",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "founded_year",
                    models.IntegerField(
                        blank=True,
                        null=True,
                        validators=[space_data.models.validate_founded_year],
                    ),
                ),
            ],
            options={
                "db_table": "space_companies",
                "indexes": [
                    models.Index(fields=["short_name"], name="idx_sc_sname"),
                    models.Index(fields=["full_name"], name="idx_sc_fname"),
                    models.Index(fields=["country"], name="idx_sc_country"),
                ],
            },
        ),
        migrations.AddField(
            model_name="rocketfamily",
            name="company",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="rocket_families",
                to="space_data.spacecompany",
            ),
        ),
        migrations.CreateModel(
            name="PayloadGroup",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("name", models.CharField(max_length=255)),
                ("description", models.TextField(blank=True, null=True)),
                (
                    "payload_type",
                    models.CharField(
                        blank=True,
                        choices=[("Test", "Test"), ("Operational", "Operational")],
                        max_length=50,
                        null=True,
                    ),
                ),
                ("orbit_type", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "payload_count",
                    models.IntegerField(
                        blank=True,
                        null=True,
                        validators=[django.core.validators.MinValueValidator(1)],
                    ),
                ),
                (
                    "mass",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=20,
                        null=True,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                (
                    "mission",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="payload_groups",
                        to="space_data.launchmission",
                    ),
                ),
                (
                    "company",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="payload_groups",
                        to="space_data.spacecompany",
                    ),
                ),
            ],
            options={
                "db_table": "payload_groups",
            },
        ),
        migrations.CreateModel(
            name="CompanyInternetResource",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("resource_type", models.CharField(max_length=50)),
                ("url", models.TextField()),
                (
                    "company",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="internet_resources",
                        to="space_data.spacecompany",
                    ),
                ),
            ],
            options={
                "db_table": "company_internet_resources",
            },
        ),
        migrations.CreateModel(
            name="LaunchVehicle",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("attempted_recovery", models.BooleanField()),
                (
                    "recovery_result",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Success", "Success"),
                            ("Partial Failure", "Partial Failure"),
                            ("Failure", "Failure"),
                            ("Pending", "Pending"),
                        ],
                        max_length=50,
                        null=True,
                    ),
                ),
                (
                    "launch",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="launch_vehicles",
                        to="space_data.launchmission",
                    ),
                ),
                (
                    "vehicle",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="launch_vehicles",
                        to="space_data.vehicle",
                    ),
                ),
                (
                    "recovery_method",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="launch_vehicles",
                        to="space_data.vehiclerecoverymethod",
                    ),
                ),
            ],
            options={
                "db_table": "launch_vehicle",
            },
        ),
        migrations.AddIndex(
            model_name="launchmission",
            index=models.Index(fields=["rocket_config"], name="idx_lm_rc_id"),
        ),
        migrations.AddIndex(
            model_name="launchmission",
            index=models.Index(fields=["launch_pad"], name="idx_lm_lp_id"),
        ),
        migrations.AddIndex(
            model_name="rocketconfiguration",
            index=models.Index(fields=["manufacturer"], name="idx_rc_manufacturer_id"),
        ),
        migrations.AddIndex(
            model_name="rocketconfiguration",
            index=models.Index(fields=["status"], name="idx_rc_status"),
        ),
        migrations.AddIndex(
            model_name="rocketconfiguration",
            index=models.Index(fields=["vehicle_family"], name="idx_rc_vf_id"),
        ),
        migrations.AlterUniqueTogether(
            name="rocketconfiguration",
            unique_together={("modification_name", "vehicle_family")},
        ),
        migrations.AddIndex(
            model_name="rocketfamily",
            index=models.Index(fields=["company"], name="idx_rf_company_id"),
        ),
        migrations.AddIndex(
            model_name="payloadgroup",
            index=models.Index(fields=["company"], name="idx_pg_company_id"),
        ),
        migrations.AddIndex(
            model_name="payloadgroup",
            index=models.Index(fields=["mission"], name="idx_pg_mission_id"),
        ),
        migrations.AddIndex(
            model_name="companyinternetresource",
            index=models.Index(fields=["company"], name="idx_cir_company_id"),
        ),
        migrations.AlterUniqueTogether(
            name="companyinternetresource",
            unique_together={("company", "resource_type")},
        ),
        migrations.AddIndex(
            model_name="launchvehicle",
            index=models.Index(fields=["launch"], name="idx_lv_launch_id"),
        ),
        migrations.AddIndex(
            model_name="launchvehicle",
            index=models.Index(fields=["vehicle"], name="idx_lv_vehicle_id"),
        ),
        migrations.AddIndex(
            model_name="launchvehicle",
            index=models.Index(fields=["recovery_method"], name="idx_lv_rm_id"),
        ),
        migrations.AlterUniqueTogether(
            name="launchvehicle",
            unique_together={("launch", "vehicle")},
        ),
    ]
